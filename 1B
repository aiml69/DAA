1. B. IMPLEMENT AND ANALYZE ITERATIVE AND RECURSIVE BINARY SEARCH 
ALGORITHM USING DIVIDE AND CONQUER METHOD. 
 
#include <stdio.h>  
 
int binarySearchIterative(int arr[], int n, int key) {  
int low = 0, high = n - 1;  
while (low <= high) {  
int mid = (low + high) / 2;  
if (arr[mid] == key) return mid;  
else if (arr[mid] < key) low = mid + 1;  
else high = mid - 1;  
}  
return -1;  
}  
 
int binarySearchRecursive(int arr[], int low, int high, int key) {  
if (low > high) return -1;  
int mid = (low + high) / 2;  
if (arr[mid] == key) return mid;  
else if (arr[mid] > key) return binarySearchRecursive(arr, low, mid - 1, key);  
else return binarySearchRecursive(arr, mid + 1, high, key);  
}  
 
int main() {  
int n, key;  
printf("\nEnter number of elements: ");  
scanf("%d", &n);  
int arr[n];  
printf("Enter sorted array: ");  
for (int i = 0; i < n; i++) scanf("%d", &arr[i]);  
printf("Enter key to search: ");  
scanf("%d", &key);  
int resultIter = binarySearchIterative(arr, n, key);  
int resultRec = binarySearchRecursive(arr, 0, n - 1, key);  
if (resultIter != -1)  
printf("Key found at index (Iterative): %d\n", resultIter);  
else   
printf("Key not found (Iterative)\n");  
if (resultRec != -1)   
printf("Key found at index (Recursive): %d\n", resultRec);  
else   
printf("Key not found (Recursive)\n");  
return 0;  
} 
