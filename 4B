#include <stdio.h>  
#define MAX 100  
int graph[MAX][MAX], visited[MAX], queue[MAX], front = -1, rear = -1, n;  
void enqueue(int v) {  
if (rear == MAX - 1) return;  
queue[++rear] = v;  
if (front == -1) front = 0;  
}  
int dequeue() {  
if (front == -1 || front > rear) return -1;  
return queue[front++];  
}  
void BFS(int start) {  
    enqueue(start);  
    visited[start] = 1;  
    while (front <= rear) {  
        int v = dequeue();  
        printf("%d ", v);  
        for (int i = 0; i < n; i++) {  
            if (graph[v][i] && !visited[i]) {  
                enqueue(i);  
                visited[i] = 1;  
            }  
        }  
    }  
}  
int main() {  
    int start;  
    printf("Enter number of vertices: ");  
    scanf("%d", &n);  
    printf("Enter adjacency matrix:\n");  
    for (int i = 0; i < n; i++)  
        for (int j = 0; j < n; j++)  
            scanf("%d", &graph[i][j]);  
printf("Enter the starting node: ");  
scanf("%d", &start);  
for (int i = 0; i < n; i++) visited[i] = 0;  
printf("Nodes reachable from node %d: ", start);  
BFS(start);  
printf("\n");  
return 0;  
} 
